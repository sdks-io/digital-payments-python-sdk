# -*- coding: utf-8 -*-

"""
shellsmartpayapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from shellsmartpayapi.api_helper import APIHelper


class Payment(object):

    """Implementation of the 'Payment' model.

    Attributes:
        method (str): The model property of type str.
        card_id (str): The model property of type str.
        card_last_digits (str): The model property of type str.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "method": 'method',
        "card_id": 'cardId',
        "card_last_digits": 'cardLastDigits'
    }

    _optionals = [
        'method',
        'card_id',
        'card_last_digits',
    ]

    def __init__(self,
                 method=APIHelper.SKIP,
                 card_id=APIHelper.SKIP,
                 card_last_digits=APIHelper.SKIP):
        """Constructor for the Payment class"""

        # Initialize members of the class
        if method is not APIHelper.SKIP:
            self.method = method 
        if card_id is not APIHelper.SKIP:
            self.card_id = card_id 
        if card_last_digits is not APIHelper.SKIP:
            self.card_last_digits = card_last_digits 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        method = dictionary.get("method") if dictionary.get("method") else APIHelper.SKIP
        card_id = dictionary.get("cardId") if dictionary.get("cardId") else APIHelper.SKIP
        card_last_digits = dictionary.get("cardLastDigits") if dictionary.get("cardLastDigits") else APIHelper.SKIP
        # Return an object of this model
        return cls(method,
                   card_id,
                   card_last_digits)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'method={(self.method if hasattr(self, "method") else None)!r}, '
                f'card_id={(self.card_id if hasattr(self, "card_id") else None)!r}, '
                f'card_last_digits={(self.card_last_digits if hasattr(self, "card_last_digits") else None)!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'method={(self.method if hasattr(self, "method") else None)!s}, '
                f'card_id={(self.card_id if hasattr(self, "card_id") else None)!s}, '
                f'card_last_digits={(self.card_last_digits if hasattr(self, "card_last_digits") else None)!s})')
