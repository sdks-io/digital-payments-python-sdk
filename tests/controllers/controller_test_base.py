# -*- coding: utf-8 -*-

"""
shellsmartpayapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

import os
import unittest
from tests.http_response_catcher import HttpResponseCatcher
from shellsmartpayapi.configuration import Configuration, Environment
from shellsmartpayapi.shellsmartpayapi_client import ShellsmartpayapiClient
from shellsmartpayapi.http.auth.mpp_token import MppTokenCredentials
from shellsmartpayapi.http.auth.o_auth_token_post import OAuthTokenPostCredentials


class ControllerTestBase(unittest.TestCase):

    """All test classes inherit from this base class. It abstracts out
    common functionality and configuration variables set up."""

    client = None
    config = None

    @classmethod
    def setUpClass(cls):
        """Class method called once before running tests in a test class."""
        cls.request_timeout = 30
        cls.assert_precision = 0.01
        cls.config = ControllerTestBase.create_configuration()
        cls.client = ShellsmartpayapiClient(config=cls.config)

    @staticmethod
    def create_configuration():
        environment = os.getenv('SHELLSMARTPAYAPI_ENVIRONMENT')
        authorization = os.getenv('SHELLSMARTPAYAPI_AUTHORIZATION')
        x_apigee_authorization = os.getenv('SHELLSMARTPAYAPI_X_APIGEE_AUTHORIZATION')

        if environment is not None:
            environment = Environment[environment.upper()]
        mpp_token_credentials=None
        if authorization is not None:
            mpp_token_credentials=MppTokenCredentials(
                authorization=authorization)

        o_auth_token_post_credentials=None
        if x_apigee_authorization is not None:
            o_auth_token_post_credentials=OAuthTokenPostCredentials(
                x_apigee_authorization=x_apigee_authorization)


        config = Configuration(http_call_back=HttpResponseCatcher())
        return config.clone_with(
            mpp_token_credentials=mpp_token_credentials,
            o_auth_token_post_credentials=o_auth_token_post_credentials,
            environment=environment)

