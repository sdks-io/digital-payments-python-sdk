# -*- coding: utf-8 -*-

"""
shellev

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from shellev.api_helper import APIHelper


class PrepareFuelingResponse(object):

    """Implementation of the 'PrepareFuelingResponse' model.

    The response of prepare fueling returns

    Attributes:
        mpp_transaction_id (str): The unique identifier of the Order. NB at
            this stage the Customer hasn’t actually bought anything so there’s
            no formal transaction associated with the Order. A transaction is
            not processed until refuelling has been completed successfully and
            will be triggered by returning the nozzle to the pump.
        products (List[str]): An array of Strings that contain the list of
            products that the user can purchase at the specified Station/Pump.
            The text is localized based on the country.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "mpp_transaction_id": 'mppTransactionId',
        "products": 'products'
    }

    _optionals = [
        'products',
    ]

    def __init__(self,
                 mpp_transaction_id=None,
                 products=APIHelper.SKIP):
        """Constructor for the PrepareFuelingResponse class"""

        # Initialize members of the class
        self.mpp_transaction_id = mpp_transaction_id 
        if products is not APIHelper.SKIP:
            self.products = products 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        mpp_transaction_id = dictionary.get("mppTransactionId") if dictionary.get("mppTransactionId") else None
        products = dictionary.get("products") if dictionary.get("products") else APIHelper.SKIP
        # Return an object of this model
        return cls(mpp_transaction_id,
                   products)
