# -*- coding: utf-8 -*-

"""
shellev

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from shellev.api_helper import APIHelper


class FinaliseFuelingRequestProductsItems(object):

    """Implementation of the 'finaliseFuelingRequestProductsItems' model.

    TODO: type model description here.

    Attributes:
        product_id (str): TODO: type description here.
        product_name (str): TODO: type description here.
        unit_price (float): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "product_id": 'productId',
        "product_name": 'productName',
        "unit_price": 'unitPrice'
    }

    _optionals = [
        'product_id',
        'product_name',
        'unit_price',
    ]

    def __init__(self,
                 product_id=APIHelper.SKIP,
                 product_name=APIHelper.SKIP,
                 unit_price=APIHelper.SKIP):
        """Constructor for the FinaliseFuelingRequestProductsItems class"""

        # Initialize members of the class
        if product_id is not APIHelper.SKIP:
            self.product_id = product_id 
        if product_name is not APIHelper.SKIP:
            self.product_name = product_name 
        if unit_price is not APIHelper.SKIP:
            self.unit_price = unit_price 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        product_id = dictionary.get("productId") if dictionary.get("productId") else APIHelper.SKIP
        product_name = dictionary.get("productName") if dictionary.get("productName") else APIHelper.SKIP
        unit_price = dictionary.get("unitPrice") if dictionary.get("unitPrice") else APIHelper.SKIP
        # Return an object of this model
        return cls(product_id,
                   product_name,
                   unit_price)
