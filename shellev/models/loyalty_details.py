# -*- coding: utf-8 -*-

"""
shellev

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class LoyaltyDetails(object):

    """Implementation of the 'LoyaltyDetails' model.

    TODO: type model description here.

    Attributes:
        loyalty_id (str): The userâ€™s Loyalty card number. Although this is
            optional the expectation is that if this is specified then
            loyaltyType must also be specified
        loyalty_type (str): Loyalty type being used, associated to the loyalty
            ID being passed. Possible values are 'Shell'

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "loyalty_id": 'loyaltyId',
        "loyalty_type": 'loyaltyType'
    }

    def __init__(self,
                 loyalty_id=None,
                 loyalty_type=None):
        """Constructor for the LoyaltyDetails class"""

        # Initialize members of the class
        self.loyalty_id = loyalty_id 
        self.loyalty_type = loyalty_type 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        loyalty_id = dictionary.get("loyaltyId") if dictionary.get("loyaltyId") else None
        loyalty_type = dictionary.get("loyaltyType") if dictionary.get("loyaltyType") else None
        # Return an object of this model
        return cls(loyalty_id,
                   loyalty_type)
