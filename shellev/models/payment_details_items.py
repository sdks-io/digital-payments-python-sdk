# -*- coding: utf-8 -*-

"""
shellev

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from shellev.api_helper import APIHelper
from shellev.models.payment_properties import PaymentProperties


class PaymentDetailsItems(object):

    """Implementation of the 'paymentDetailsItems' model.

    TODO: type model description here.

    Attributes:
        payment_category (str): The type of commercial transaction. Permitted
            value\:  *  B2B
        payment_method_id (str): The payment method used to make the
            transaction. Possible values include:    *  euroShell
        payment_properties (PaymentProperties): Object containing Payment
            Property details Please note:    All the attributes are optional
            as they serve all payment methods (i.e. different payment methods
            require different fields to be filled/mandated). As a result, some
            of these fields will be mandatory depending on the selected
            payment method and the API will return an error if they are not
            completed

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "payment_method_id": 'paymentMethodId',
        "payment_properties": 'paymentProperties',
        "payment_category": 'paymentCategory'
    }

    _optionals = [
        'payment_category',
    ]

    def __init__(self,
                 payment_method_id=None,
                 payment_properties=None,
                 payment_category=APIHelper.SKIP):
        """Constructor for the PaymentDetailsItems class"""

        # Initialize members of the class
        if payment_category is not APIHelper.SKIP:
            self.payment_category = payment_category 
        self.payment_method_id = payment_method_id 
        self.payment_properties = payment_properties 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        payment_method_id = dictionary.get("paymentMethodId") if dictionary.get("paymentMethodId") else None
        payment_properties = PaymentProperties.from_dictionary(dictionary.get('paymentProperties')) if dictionary.get('paymentProperties') else None
        payment_category = dictionary.get("paymentCategory") if dictionary.get("paymentCategory") else APIHelper.SKIP
        # Return an object of this model
        return cls(payment_method_id,
                   payment_properties,
                   payment_category)
