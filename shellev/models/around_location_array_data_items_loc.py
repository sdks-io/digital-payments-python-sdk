# -*- coding: utf-8 -*-

"""
shellev

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from shellev.api_helper import APIHelper


class AroundLocationArrayDataItemsLoc(object):

    """Implementation of the 'aroundLocationArrayDataItemsLoc' model.

    Object containing address details/elements

    Attributes:
        street (str): The station’s full street address, including building
            number
        pc (str): The station’s postcode
        city (str): The city the station is located within
        region (str): The region the station is located within
        country (str): The name of the country (in English) the station is
            located within
        ccode (str): The two-letter ISO 3166 country code of the country the
            station is located within

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "country": 'country',
        "ccode": 'ccode',
        "street": 'street',
        "pc": 'pc',
        "city": 'city',
        "region": 'region'
    }

    _optionals = [
        'street',
        'pc',
        'city',
        'region',
    ]

    def __init__(self,
                 country=None,
                 ccode=None,
                 street=APIHelper.SKIP,
                 pc=APIHelper.SKIP,
                 city=APIHelper.SKIP,
                 region=APIHelper.SKIP):
        """Constructor for the AroundLocationArrayDataItemsLoc class"""

        # Initialize members of the class
        if street is not APIHelper.SKIP:
            self.street = street 
        if pc is not APIHelper.SKIP:
            self.pc = pc 
        if city is not APIHelper.SKIP:
            self.city = city 
        if region is not APIHelper.SKIP:
            self.region = region 
        self.country = country 
        self.ccode = ccode 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        country = dictionary.get("country") if dictionary.get("country") else None
        ccode = dictionary.get("ccode") if dictionary.get("ccode") else None
        street = dictionary.get("street") if dictionary.get("street") else APIHelper.SKIP
        pc = dictionary.get("pc") if dictionary.get("pc") else APIHelper.SKIP
        city = dictionary.get("city") if dictionary.get("city") else APIHelper.SKIP
        region = dictionary.get("region") if dictionary.get("region") else APIHelper.SKIP
        # Return an object of this model
        return cls(country,
                   ccode,
                   street,
                   pc,
                   city,
                   region)
